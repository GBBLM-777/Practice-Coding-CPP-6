#include<iostream>
#include<iomanip>
using namespace std;

//global declaration
    int i;
    const int size=10;
    typedef double *pointers;//typedefinition used for miles per gallon pointer variables

//prototype
//for grade elimination
    void getInput(double *input);//prompt the user to input 10 grades
    double getLow(double *low);//compute and returns the value of the lowest grade
    double getSum(double *sum);//compute for the sum of 10 grades

//choices and try again
    char getChoice(char *ch);//display the menu of choices and input the choice of the user

//miles per gallon
    void MilesPerrGallon(double *ptr1,double *ptr2,int sz);//final output of the computer miles

//and gallons
    void MperG();//prompts the user to specify the size of the array for miles and gallons

//verify and validate the input for miles and gallons using exception handling

int main()
{
    //add only declaration here
    char choice, opt;
	char *chr;

    do
    {
        chr=&choice;
        opt=getChoice(chr);
        
        switch(*chr)
        {
            case '1':
            {
                double grade[size];
                double *ptr;
                double *plow, *psum, *pave;
                double gsum,glow;
                double ave;
                
                system("cls");
                //add declaration here
                ptr = grade;
 			    plow = &glow;
 			    psum = &gsum;
 			    pave = &ave;

                system("cls");
                //add code here
                cout << "Choice[1]:Grade Elimination" << endl;
 			    getInput (ptr);
 			    *psum = getSum(ptr);
 			    *plow = getLow(ptr);
 			    *pave = (gsum - glow) / (size - 1);
                //NOTE ALL CODES MUST USE pointer variables â€“input,process and
                //output

                cout << "you entered" << endl; 
					for(i=0; i<size; i++)
						cout << "grade[" << i+1 <<"]:" << grade[0+i] << "" << endl;
                cout << "sum = " << gsum << endl;
 			  	cout << "lowest = " << glow << endl;
 			  	cout << fixed << setprecision (2) << "average = " << ave << endl;
            }break;

            case '2': MperG();
            break;
            
            case '3':
            cout<<"goodbye for now....\n";
            system("pause");
            exit(1);
            break;
        }//end-switch
	}
    //Add code here
    while (choice!='1' && choice!='2' && choice!='3');
    
    do 
    {
 		cout << "Do you want to try again? [y/n]: ";
 		cin >> opt;
	}while (opt != 'y' && opt != 'n');

    if (opt == 'n')
    {         
    	cout << "leaving program now....\n";         
        exit(0);     
    } 
    else
        system("cls");
		main();
    cout<<endl;
    system("pause");
    return 0;
}//end-int-main

/////////////////////////////////// GETCHOICE ///////////////////////////////////////////
char getChoice(char *ch)
{
    //add code here
    cout << "<<<<<<<<<<MENU>>>>>>>>>>" << endl;
    cout << "[1] score of 10 quizzes" << endl;
    cout << "[2] miles per gallon" << endl;
    cout << "[3] to quit" << endl;
    cout << "enter your choice: ";
	cin >> *ch;
    system("cls");

	if(*ch=='1', '2', '3')
		return *ch;
	else
		return 0;  
}//end-getChoice

/////////////////////////////////// GETINPUT ///////////////////////////////////////////
void getInput(double *input)
{
    //add code here
    cout << "enter " << size << " grades" << endl;
 	for (i = 0; i < size; i++)
 	{
 		cout << "grade[" << i << "]:";
		cin >> *(input + i);	 	
	}//end-for

    system("cls");
}//end-getInput

/////////////////////////////////// GETSUM ///////////////////////////////////////////
double getSum(double *sum)
{
    double add=0;

    //add code here
    for (i = 0; i < size; i++)
	{
		add += *(sum + i);  	
	}//end-for

    return add;
}//end-getSum

/////////////////////////////////// GETLOW ///////////////////////////////////////////
double getLow(double *low)
{
    double baba;

    //add code here
    for (i = 1; i < size; i++)
	{
		if (baba > *(low + i))
		{
		   	baba = *(low + i);
		}//end-if
	}//end-for

    return baba;
}//end-getLow

/////////////////////////////////// MPERG ///////////////////////////////////////////
void MperG()
{
    int ctr;
    pointers milPtr,galPtr;
    int msize;
    
    system("cls");
    //add code here
    cout << "COMPUTING FOR MPG : miles per gallon..." << endl;
	cout << "Specify the size of the array: ";
	cin >> msize;
		
	while (msize < 5 || msize > 15)
	{
		cout << endl;
		cout << "size 5-15 only" << endl;
	    cout << "Specify the size of the array: ";
		cin >> msize;
	}//end-while

	milPtr = new double [msize];
	galPtr = new double [msize];

    cout << fixed << setprecision (2) << endl;
    cout << "MILES\n";

    for(ctr=0; ctr<msize; ctr++)
    {
        //add code here
        bool ans = true;
	    while (ans)
		{
            cout << "miles[" << ctr << "]:";
	        cin >> milPtr[ctr];
            try
            {
                //add code here
				if(*(milPtr+ctr)<100)
					throw *(milPtr+ctr);
				if(*(milPtr+ctr)>250)
					throw *(milPtr+ctr);	
            }//end-try

            catch(double e)
            {
                //add code here
                cout << e << " is invalid!.. 100-250 only" << endl;
		        cout << "re-enter a new value" << endl;
                continue;
            }//end-catch

            //add code here
            ans = false;
        }//end while
    }//loop for miles

/*********************************************************/
cout<<"GALLONS\n";
for(ctr=0; ctr<msize; ctr++)
{
    bool ans=true;
    while(ans)
    {
        //add code here
        cout << "gallons[" << ctr << "]:";
        cin >> galPtr[ctr];
       
        try
        {
            //add code here
			if(*(galPtr+ctr)<5)
				throw *(galPtr+ctr);
			if(*(galPtr+ctr)>25)
				throw *(galPtr+ctr);
        }//end-try
        
        catch(double e)
        {
            //add code here
            cout << e << " is invalid!.. 5-25 only" << endl;
            cout << "re-enter a new value" <<endl;
            continue;
        }//end-catch
        
        //add code here'
        ans = false;
    }//end-while
}//end-for//loop for gallons

    MilesPerrGallon(milPtr,galPtr,msize);
}//end-MperG

/////////////////////////////////// MILESPERRGALLON ///////////////////////////////////////////
void MilesPerrGallon(double *ptr1,double *ptr2,int sz)
{
    double mpg[sz];
    pointers mpgPtr;
    int index;

    //add code here
    mpgPtr = mpg;
   	cout << left << fixed << setprecision (2) << endl;
   	cout << setw (8) << "miles" << "/ ";
   	cout << setw (8) << "gallon" << "= ";
   	cout << "MPG" << endl;
   	   		        
   	for (index = 0; index < sz; index++)
    {
   	*(mpgPtr + index) = *(ptr1 + index) / *(ptr2 + index);
   	cout << setw(8) << *(ptr1 + index) << "/ ";
   	cout << setw(8) << *(ptr2 + index) << "= ";
   	cout << mpg [ index] << endl;   			 
	}//end-for
}//end-MilesPerrGallon
